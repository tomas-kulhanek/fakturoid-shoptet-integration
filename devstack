#!/bin/bash


if [ ! -f .docker/.env ]; then
  cp .docker/.env.dist .docker/.env
fi

if [ ! -f .docker/.composerAuth.json ]; then
  cp .docker/.composerAuth.json.dist .docker/.composerAuth.json
fi

# Configuration
source .docker/.env
DEVSTACK_PREFIX=${DEVSTACK_PREFIX:-helppc-devstack}
DEVSTACK_USER=${DEVSTACK_USER:-dfx}
DEVSTACK_VERSION=1.0

DEVSTACK_DOCKER=docker-compose.local.yml

OS=`uname -s`
if [ $OS != "Darwin" ]; then
    MAINFOLDERPATH=`pwd`
fi
if [ $OS == "Darwin" ]; then
    LINE=`pwd`
    if [ -d "LINE" ]; then
      LINE="/System/Volumes/Data"`pwd`
    fi
    MAINFOLDERPATH=$LINE
    DEVSTACK_DOCKER=docker-compose.mac.yml
    FILE=/etc/exports
    if ! grep -qF "$LINE" "$FILE"; then
      ./.docker/docker-nfs
    fi
fi
# Functions
usage() {
cat << EOF
Usage: ${0##*/} [-h]

Control your LAMP devstack.

Environment:
    Version: $DEVSTACK_VERSION
    User: $DEVSTACK_USER
    Prefix: $DEVSTACK_PREFIX-[container]
    Configuration: docker-compose.yml $DEVSTACK_DOCKER

Commands:

    -h | help   Display this help and exit.

  Devstack:
      s | up | start            Start services
      sl | start-logs           Start and follow logs
      r | restart               Restart services
      rl | restart-logs         Restart and follow logs
      b | build                 Build services
      ru | reup                 Build & Start
      d | destroy               Destroy services
      ps | list                 List services in devstack
      u | upgrade               Upgrade devstack images
      m | migration             Proceed all database migration
      c | console               Console from application

  Services:
      rb | rebuild [service]            Rebuild service
      e | exec [service] [command]      Exec command in [service]
EOF
}

crossroad() {
  cat << EOF
    RabbitMQ
      host: rabbit
      address: http://$DEVSTACK_HOST:$HTTP_RABBIT_MANAGEMENT_PORT
      username: $RABBITMQ_DEFAULT_USER
      password: $RABBITMQ_DEFAULT_PASS

    MariaDB
      host: mariadb
      address: $DEVSTACK_HOST:$MARIADB_PORT
      username: $MYSQL_USER
      password: $MYSQL_PASSWORD
      root:
        username: root
        password: $MYSQL_ROOT_PASSWORD

    Devmail:
      host: devmail
      address: http://$DEVSTACK_HOST:$HTTP_DEVMAIL_PORT

    Web:
      host: nginx
      address: http://$DEVSTACK_HOST:$HTTP_APPLICATION_PORT

    PHPFPM
      host: php-fpm

EOF
}

call() {
	if [ -f "$DEVSTACK_DOCKER" ]; then
		docker-compose -p "$DEVSTACK_PREFIX" --env-file .docker/.env -f docker-compose.yml -f $DEVSTACK_DOCKER $*
	else
		docker-compose -p "$DEVSTACK_PREFIX" --env-file .docker/.env -f docker-compose.yml $*
	fi
}

# shellcheck disable=SC2120
up() {
    call up -d --remove-orphans $@
    crossroad
}

migrate() {
    fire php-fpm php bin/console.php migration:continue
}

build() {
    call build
}

reup() {
    build
    up
}

# shellcheck disable=SC2120
restart() {
    call up -d --force-recreate $@
}

stop() {
    call stop
}

destroy() {
    call stop
    call rm
}

rebuild() {
    destroy
    build
}

list() {
    call ps
}

logs() {
    call logs --follow
}

fire() {
    # shellcheck disable=SC2048
    call exec $*
}

upgrade() {
    # shellcheck disable=SC2046
    docker rmi --force $(docker images --filter=reference="$DEVSTACK_PREFIX"'/*' -q)
    call pull
}

# Main switch
case "$1" in
    s|up|start)
        up
        exit 0
        ;;
    sl|start-logs)
        up && logs
        exit 0
        ;;
    r|restart)
        restart
        exit 0
        ;;
    rl|restart-logs)
        restart && logs
        exit 0
        ;;
    b|build)
        build
        exit 0
        ;;
    ru|reup)
        reup
        exit 0
        ;;
    rb|rebuild)
        # shellcheck disable=SC2068
        rebuild $@
        exit 0
        ;;
    d|destroy)
        destroy
        exit 0
        ;;
    ps|list)
        list
        exit 0
        ;;
    l|logs)
        logs
        exit 0
        ;;
    e|exec)
        shift
        # shellcheck disable=SC2068
        fire $@
        exit 0
        ;;
    u|upgrade)
        upgrade
        exit 0
        ;;
    m|migrate)
        migrate
        exit 0
        ;;
    c|console)
        fire php-fpm php bin/console.php "${*:2}"
        exit 0
        ;;
    *)
        usage
        crossroad
        exit 1
        ;;
esac
shift

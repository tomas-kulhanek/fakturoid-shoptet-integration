name: Create and publish a Docker image


on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"

env:
  PHP_VERSION: "8.0"
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  extensions: "xml mbstring curl openssl dom gd zip intl json intl"
  composer-install-args: "--no-progress --no-interaction --prefer-dist --no-scripts"

jobs:
  composer:
    name: "Download composer"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: shivammathur/setup-php@v2
        with:
          extensions: "${{ env.extensions }}"
          php-version: ${{ env.PHP_VERSION }}
          coverage: none
      - uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-${{ hashFiles('composer.lock') }}

      - uses: php-actions/composer@v6
        with:
          php_extensions: "${{ env.extensions }}"
          php_version: ${{ env.PHP_VERSION }}
          args: "${{ env.composer-install-args }}"

  qa:
    name: "Quality assurance"
    runs-on: "ubuntu-latest"
    needs: composer

    steps:
      - uses: actions/checkout@v2
      - uses: shivammathur/setup-php@v2
        with:
          extensions: "${{ env.extensions }}"
          php-version: ${{ env.PHP_VERSION }}
          coverage: none
      - uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-${{ hashFiles('composer.lock') }}
      - run: composer ecs

  static-analysis:
    name: "Static analysis"
    runs-on: "ubuntu-latest"
    needs: composer

    steps:
      - uses: actions/checkout@v2
      - uses: shivammathur/setup-php@v2
        with:
          extensions: "${{ env.extensions }}"
          php-version: ${{ env.PHP_VERSION }}
          coverage: none

      - uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-${{ hashFiles('composer.lock') }}

      - run: composer phpstan

  rector:
    name: "Rector"
    runs-on: "ubuntu-latest"
    needs: composer

    steps:
      - uses: actions/checkout@v2
      - uses: shivammathur/setup-php@v2
        with:
          extensions: "${{ env.extensions }}"
          php-version: ${{ env.PHP_VERSION }}
          coverage: none

      - uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-${{ hashFiles('composer.lock') }}

      - run: composer rector

  build-and-push-image:
    name: "Publish application image"
    runs-on: ubuntu-latest
    needs:
      - qa
      - static-analysis
      - rector
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker PHP
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image PHP
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          file: ./Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
